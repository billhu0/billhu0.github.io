<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>How to install WSL</title>
    <link href="/2021/10/21/07_wsl/"/>
    <url>/2021/10/21/07_wsl/</url>
    
    <content type="html"><![CDATA[<h2 id="How-to-install-WSL-on-Windows"><a href="#How-to-install-WSL-on-Windows" class="headerlink" title="How to install WSL on Windows"></a>How to install WSL on Windows</h2><h3 id="Step1-Upgrade-Windows-10-if-needed"><a href="#Step1-Upgrade-Windows-10-if-needed" class="headerlink" title="Step1. Upgrade Windows 10 if needed."></a>Step1. Upgrade Windows 10 if needed.</h3><p>Windows10 started to support WSL 2 in May 2020, with the release of win10 version 1770. Older versions of windows10 cannot install WSL.</p><p>You can go to the official website of microsoft windows, and follow the instructions to upgrade Windows.</p><h3 id="Step2-Start-to-install"><a href="#Step2-Start-to-install" class="headerlink" title="Step2. Start to install."></a>Step2. Start to install.</h3><p>In cmd(administrator) or powershell(administrator) , run </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wsl --install<br></code></pre></td></tr></table></figure><p>Then, open Microsoft Store, and search for <code>Ubuntu 18.04</code> and download. </p><p>Launch it after the download is complete. You will see a command window with ‘installing…’.</p><h4 id="Trouble-shooting"><a href="#Trouble-shooting" class="headerlink" title="Trouble shooting:"></a>Trouble shooting:</h4><p>If an error with code <code>0xc03a001a</code> occurs, the solution is:</p><p>1 In explorer, find  <code>C:\Users\YOUR_USER_NAME\AppData\Local\Packages</code></p><p>2 Find a folder with prefix <code>CanonicalGroupLimited.Ubuntu18.04onWindows</code> </p><p>3 Right click on it, and select <code>properties</code>,<code>advance</code> (in Chinese, 右键，属性，高级)</p><p>4 Unselect <code>compress content to save disk space</code>  (in Chinese, 取消勾选“压缩内容以节省磁盘空间“)</p><p>5 Click <code>OK</code> and try to install again.</p><h3 id="Step-3-Enjoy"><a href="#Step-3-Enjoy" class="headerlink" title="Step 3: Enjoy"></a>Step 3: Enjoy</h3><p>After the installation is complete, you can see the terminal of ubuntu.</p><p>You can access the terminal of WSL ubuntu by entering </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wsl<br></code></pre></td></tr></table></figure><p>in cmd or terminal.</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>windows</tag>
      
      <tag>WSL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Build your blog with hexo and deploy to GitHub</title>
    <link href="/2021/10/11/06_hexo/"/>
    <url>/2021/10/11/06_hexo/</url>
    
    <content type="html"><![CDATA[<h2 id="Build-your-blog-with-hexo-and-deploy-it-to-GitHub-Pages"><a href="#Build-your-blog-with-hexo-and-deploy-it-to-GitHub-Pages" class="headerlink" title="Build your blog with hexo and deploy it to GitHub Pages"></a>Build your blog with <code>hexo</code> and deploy it to GitHub Pages</h2><p>( This is my first tutorial post written in English.  )</p><h3 id="Preamble"><a href="#Preamble" class="headerlink" title="Preamble"></a>Preamble</h3><p>Maybe you want to have your own website and your own blog, but don’t want to spend money maintaining a server, or don’t have enough energy to start from the beginning making a website?  Well, you can build your blog with  <code>hexo</code>  and  <code>github pages</code> , just like how this tutorial is published, which is completely free and easy to use! </p><p>Follow these steps, and you can have your own blog! This is also how this blog is created.</p><h3 id="Step-1-Install-node-js-and-git"><a href="#Step-1-Install-node-js-and-git" class="headerlink" title="Step 1. Install  node.js and  git"></a>Step 1. Install  <code>node.js</code> and  <code>git</code></h3><p>On macOS, <code>git</code> should be preinstalled as long as you have XCode downloaded, while<br><code>node.js</code> can be installed with <code>brew</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install node<br></code></pre></td></tr></table></figure><p>You can execute <code>node -v</code> , <code>npm -v</code> , <code>git --version</code> to check if you have correctly installed these packages.</p><h3 id="Step-2-Prepare-your-GitHub-Account"><a href="#Step-2-Prepare-your-GitHub-Account" class="headerlink" title="Step 2. Prepare your GitHub Account."></a>Step 2. Prepare your GitHub Account.</h3><h4 id="Register-and-set-username-amp-email"><a href="#Register-and-set-username-amp-email" class="headerlink" title="Register and set username &amp; email"></a>Register and set username &amp; email</h4><p>First, of course, you need to register a GitHub account (with your email). Note that the username will be your prefix of the website, so choose the username carefully. For instance, my username is <code>billhu0</code> and my website (just the one you are looking) is <code>billhu0.github.io</code>.</p><p>Then, go to terminal and run the following:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;Your_github_name&quot;<br>git config --global user.email &quot;Your_github_email&quot;<br></code></pre></td></tr></table></figure><p>Replace <code>&quot;Your_github_name&quot;</code> and <code>&quot;Your_github_email&quot;</code> with your github name and github email. </p><h4 id="Add-an-SSH-public-key"><a href="#Add-an-SSH-public-key" class="headerlink" title="Add an SSH public key"></a>Add an SSH public key</h4><p>First, create an SSH key. In terminal, </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;Your_github_email&quot;<br></code></pre></td></tr></table></figure><p>You may need to type <code>y</code> or <code>yes</code> according to the prompts. </p><p>Then, copy the text in file <code>~/.ssh/id_rsa.pub</code>.</p><p>Go to GitHub website, Settings, select <code>SSH and GPG keys</code> on the left sidebar, and click <code>New SSH key</code>.</p><img src="/2021/10/11/06_hexo/SSH_1.jpg" class=""><p>Choose a title (any title is OK), and paste the text into <code>Key</code>, after that click <code>Add SSH key</code> to complete the process.</p><img src="/2021/10/11/06_hexo/SSH_2.png" class=""><p>Finally, in terminal, run</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>type <code>yes</code> when seeing ‘Are you sure …. ‘, and wait for responce.</p><p><code>Hi, xxx! You&#39;ve successfully authenticated, ...</code> means that the connection is successful.</p><img src="/2021/10/11/06_hexo/SSH_3.png" class=""><h3 id="Step-3-Create-Github-Pages-Repository"><a href="#Step-3-Create-Github-Pages-Repository" class="headerlink" title="Step 3. Create Github Pages Repository"></a>Step 3. Create Github Pages Repository</h3><p>On Github website, click the ‘+’ icon on the top-right of the toolbar, and select ‘new repository’.</p><p>Repository name:  <code>your_username.github.io</code>, e.g, <code>billhu0.github.io</code>.<br>Mark the checkbox ‘initialize this repository with a README’.<br>Description: No need to write.</p><p>HTTPS will be automatically enabled after that, and your blog address is <code>https://your_username.github.io</code>.</p><h3 id="Step-4-Build-Hexo-on-your-local-environment"><a href="#Step-4-Build-Hexo-on-your-local-environment" class="headerlink" title="Step 4. Build Hexo on your local environment"></a>Step 4. Build Hexo on your local environment</h3><h4 id="Install-hexo-with-npm-nodejs-package-manager"><a href="#Install-hexo-with-npm-nodejs-package-manager" class="headerlink" title="Install hexo with npm (nodejs package manager)"></a>Install hexo with npm (nodejs package manager)</h4><p>In terminal, execute </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo npm install -g hexo<br></code></pre></td></tr></table></figure><p>If you are in China and the download speed is slow, you can use tencent mirror source by entering </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry http://mirrors.cloud.tencent.com/npm/<br></code></pre></td></tr></table></figure><h4 id="Initalize-hexo"><a href="#Initalize-hexo" class="headerlink" title="Initalize hexo"></a>Initalize hexo</h4><p>Choose a directory (this directory will be your local hexo directory, so choose it carefully). In the future, almost every operation should be done in this directory, so you are suggested to backup it regularly.</p><p>In terminal, ‘cd’ to this directory, and run </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init<br>npm install<br></code></pre></td></tr></table></figure><p>and wait until complete.</p><h4 id="Preview-your-blog"><a href="#Preview-your-blog" class="headerlink" title="Preview your blog."></a>Preview your blog.</h4><p>Now your blog has been created by hexo. Run the following command in terminal </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g   # this is the same as &#x27;hexo generate&#x27;<br>hexo s   # this is the same as &#x27;hexo server&#x27;<br></code></pre></td></tr></table></figure><p>The <code>hexo g</code> command transfers your raw data (including posts, pages in markdown and other formats) into something that can be viewed on web. </p><p>And <code>hexo s</code> can let you preview the website by visiting <code>localhost://4000</code> with your browser. If the command fails, enter <code>npm install hexo-server --save</code> and try again.</p><h3 id="Step-5-Deploy-your-local-hexo-to-GitHub-Pages"><a href="#Step-5-Deploy-your-local-hexo-to-GitHub-Pages" class="headerlink" title="Step 5. Deploy your local hexo to GitHub Pages"></a>Step 5. Deploy your local hexo to GitHub Pages</h3><p>After testing your blog locally, you can now deploy it to the github repository you have just created, making it visiable to others.<br>In terminal, run </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>and go to the end of file <code>./_config.yml&#39;</code>, modify the <code>deploy</code> part to the following </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br><span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:your_username/your_username.github.io.git</span><br><span class="hljs-attr">branch:</span> <span class="hljs-string">main</span>  <span class="hljs-comment"># or master, according to your repository.</span><br></code></pre></td></tr></table></figure><img src="/2021/10/11/06_hexo/deploy_yml.png" class=""><p>And then run the following command in terminal</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean<br>hexo g<br>hexo d  # alia of &#x27;hexo deploy&#x27;<br></code></pre></td></tr></table></figure><p>Note that you can directly run a single <code>hexo d</code>, but to reduce the possibility of some small errors, you are suggested to run <code>hexo clean &amp;&amp; hexo g</code> everyone before you want to <code>hexo d</code>.</p><p>Well Done! Now visit <code>your_username.github.io</code> and you can see your blog !</p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>macOS</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>(macOS)VSCode运行调试C(++)的环境配置</title>
    <link href="/2021/10/10/05/"/>
    <url>/2021/10/10/05/</url>
    
    <content type="html"><![CDATA[<h2 id="macOS-上用-VSCode-运行调试单文件-C-的环境配置"><a href="#macOS-上用-VSCode-运行调试单文件-C-的环境配置" class="headerlink" title="macOS 上用 VSCode 运行调试单文件 C(++) 的环境配置"></a>macOS 上用 VSCode 运行调试单文件 C(++) 的环境配置</h2><h4 id="1-编译运行：Coderunner配置"><a href="#1-编译运行：Coderunner配置" class="headerlink" title="1. 编译运行：Coderunner配置"></a>1. 编译运行：Coderunner配置</h4><p>下载插件<code>coderunner</code>即可。</p><img src="/2021/10/10/05/20210416215626549.png" class=""><p>在<code>settings.json</code>中可以自定义编译程序的命令。</p><p>我的自定义<code>coderunner</code>命令：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <br>    <span class="hljs-attr">&quot;code-runner.executorMap&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;cpp&quot;</span>: <span class="hljs-string">&quot; cd $dir &amp;&amp; g++ \&quot;$fileName\&quot; -o $fileNameWithoutExt -W -Wall -std=c++17 &amp;&amp;  ./$fileNameWithoutExt&quot;</span>,<br>        <span class="hljs-attr">&quot;c&quot;</span>  : <span class="hljs-string">&quot; cd $dir &amp;&amp; gcc \&quot;$fileName\&quot; -o $fileNameWithoutExt -W -Wall -std=c17   &amp;&amp;  ./$fileNameWithoutExt&quot;</span>,<br>        <span class="hljs-attr">&quot;s&quot;</span>  : <span class="hljs-string">&quot; cd $dir &amp;&amp; gcc \&quot;$fileName\&quot; -o $fileNameWithoutExt &amp;&amp; ./fileNameWithoutExt&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">&quot;code-runner.clearPreviousOutput&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">&quot;code-runner.saveAllFilesBeforeRun&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">&quot;code-runner.saveFileBeforeRun&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">&quot;code-runner.showExecutionMessage&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">&quot;code-runner.runInTerminal&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">&quot;code-runner.preserveFocus&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-attr">&quot;code-runner.ignoreSelection&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">&quot;launch&quot;</span>: &#123;<br>        <span class="hljs-attr">&quot;configurations&quot;</span>: [],<br>        <span class="hljs-attr">&quot;compounds&quot;</span>: []<br>    &#125;<br>    <br>&#125;<br><br></code></pre></td></tr></table></figure><p>可以将此段内容插入到 <code>~/Library/ApplicationSupport/Code/User/settings.json</code>中。</p><h4 id="2-调试：launch-json-和-tasks-json-配置"><a href="#2-调试：launch-json-和-tasks-json-配置" class="headerlink" title="2. 调试：launch.json 和 tasks.json 配置"></a>2. 调试：launch.json 和 tasks.json 配置</h4><p>先安装插件 <code>CodeLLDB</code>。</p><img src="/2021/10/10/05/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpcmluXzg2NQ==,size_16,color_FFFFFF,t_70-20211010184017573.png" class=""><p>在工作区的<code>.vscode</code>文件夹内（如果没有的话就新建一个），新建两个名为 <code>tasks.json</code> 和 <code>launch.json</code> 的文件。</p><img src="/2021/10/10/05/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpcmluXzg2NQ==,size_16,color_FFFFFF,t_70-20211010184033213.png" class=""><p>文件内放入以下内容：</p><p><code>launch.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;version&quot;</span>: <span class="hljs-string">&quot;0.2.0&quot;</span>,<br>    <span class="hljs-attr">&quot;configurations&quot;</span>: [<br>        &#123;<br>            <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;lldb&quot;</span>,<br>            <span class="hljs-attr">&quot;request&quot;</span>: <span class="hljs-string">&quot;launch&quot;</span>,<br>            <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;cpp debug&quot;</span>,<br>            <span class="hljs-attr">&quot;preLaunchTask&quot;</span>: <span class="hljs-string">&quot;g++ compile&quot;</span>,<br>            <span class="hljs-attr">&quot;program&quot;</span>: <span class="hljs-string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span>,<br>            <span class="hljs-attr">&quot;args&quot;</span>: [],<br>            <span class="hljs-comment">// &quot;environment&quot;: [],</span><br>            <span class="hljs-attr">&quot;cwd&quot;</span>: <span class="hljs-string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,<br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><p><code>tasks.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;version&quot;</span>: <span class="hljs-string">&quot;2.0.0&quot;</span>,<br>    <span class="hljs-attr">&quot;tasks&quot;</span>: [<br>        &#123;<br>            <span class="hljs-attr">&quot;label&quot;</span>: <span class="hljs-string">&quot;g++ compile&quot;</span>,  <br>            <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-string">&quot;shell&quot;</span>, <br>            <span class="hljs-attr">&quot;command&quot;</span>: <span class="hljs-string">&quot;cd $dir &amp;&amp; g++ $fileName -g -o $fileNameWithoutExt -W -Wall -std=c++17 &amp;&amp;  ./$fileNameWithoutExt&quot;</span>,<br>            <span class="hljs-attr">&quot;group&quot;</span>: &#123;<br>                <span class="hljs-attr">&quot;kind&quot;</span>: <span class="hljs-string">&quot;build&quot;</span>,<br>                <span class="hljs-attr">&quot;isDefault&quot;</span>: <span class="hljs-literal">true</span><br>            &#125;,<br>            <span class="hljs-attr">&quot;presentation&quot;</span>: &#123;<br>                <span class="hljs-attr">&quot;echo&quot;</span>: <span class="hljs-literal">true</span>, <br>                <span class="hljs-attr">&quot;reveal&quot;</span>: <span class="hljs-string">&quot;silent&quot;</span>,<br>                <span class="hljs-attr">&quot;focus&quot;</span>: <span class="hljs-literal">false</span>, <br>                <span class="hljs-attr">&quot;panel&quot;</span>: <span class="hljs-string">&quot;shared&quot;</span>, <br>                <span class="hljs-attr">&quot;showReuseMessage&quot;</span>: <span class="hljs-literal">true</span>, <br>                <span class="hljs-attr">&quot;clear&quot;</span>: <span class="hljs-literal">false</span><br>            &#125;,<br>            <span class="hljs-attr">&quot;options&quot;</span>: &#123;<br>                <span class="hljs-attr">&quot;cwd&quot;</span>: <span class="hljs-string">&quot;$&#123;workspaceFolder&#125;&quot;</span> <br>            &#125;,<br>            <span class="hljs-attr">&quot;problemMatcher&quot;</span>: &#123;<br>                <span class="hljs-attr">&quot;owner&quot;</span>: <span class="hljs-string">&quot;cpp&quot;</span>,<br>                <span class="hljs-attr">&quot;fileLocation&quot;</span>: <span class="hljs-string">&quot;absolute&quot;</span>,<br>                <span class="hljs-attr">&quot;pattern&quot;</span>: &#123;<br>                    <span class="hljs-attr">&quot;regexp&quot;</span>: <span class="hljs-string">&quot;^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$&quot;</span>,<br>                    <span class="hljs-attr">&quot;file&quot;</span>: <span class="hljs-number">1</span>,<br>                    <span class="hljs-attr">&quot;line&quot;</span>: <span class="hljs-number">2</span>,<br>                    <span class="hljs-attr">&quot;column&quot;</span>: <span class="hljs-number">3</span>,<br>                    <span class="hljs-attr">&quot;severity&quot;</span>: <span class="hljs-number">4</span>,<br>                    <span class="hljs-attr">&quot;message&quot;</span>: <span class="hljs-number">5</span><br>                &#125;<br>            &#125;<br>        &#125;,<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><p>保存好这两个json配置文件之后，在vscode左边边栏的“调试”中，应该就能看到cpp debug的字样。<img src="/2021/10/10/05/1.png" class=""></p><p>这个时候打上断点，点击cpp debug旁边的运行按钮，就可以调试了。</p><img src="/2021/10/10/05/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0tpcmluXzg2NQ==,size_16,color_FFFFFF,t_70-20211010184117212.png" class=""><h4 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h4><p>更详细的教程，可以移步本人在CSDN上的文章： <a href="https://blog.csdn.net/Kirin_865/article/details/115772784?spm=1001.2014.3001.5501">网页链接</a></p>]]></content>
    
    
    <categories>
      
      <category>VSCode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>macOS</tag>
      
      <tag>VSCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>macOS上用VSCode或Jetbrains IDE写LaTeX</title>
    <link href="/2021/09/14/%E7%94%A8VSCode%E5%86%99LaTeX-1/"/>
    <url>/2021/09/14/%E7%94%A8VSCode%E5%86%99LaTeX-1/</url>
    
    <content type="html"><![CDATA[<h1 id="macOS-上用-VSCode-或-Jetbrains-IDE-写-LaTeX"><a href="#macOS-上用-VSCode-或-Jetbrains-IDE-写-LaTeX" class="headerlink" title="macOS 上用 VSCode 或 Jetbrains IDE 写 LaTeX"></a>macOS 上用 VSCode 或 Jetbrains IDE 写 LaTeX</h1><h3 id="一-安装-MacTex-（TexShop）"><a href="#一-安装-MacTex-（TexShop）" class="headerlink" title="一. 安装 MacTex （TexShop）"></a>一. 安装 MacTex （TexShop）</h3><p>​    链接： <a href="https://www.tug.org/mactex/">mactex</a></p><p>​    注意：有两个版本，”完整版“大约4G，”精简版“大约100M。除非电脑存储空间不足，建议下载那个大的，否则可能出现ctex等package缺失的问题。</p><h3 id="二-VSCode-配置方法"><a href="#二-VSCode-配置方法" class="headerlink" title="二. VSCode 配置方法"></a>二. VSCode 配置方法</h3><h5 id="1-在VSCode中安装插件"><a href="#1-在VSCode中安装插件" class="headerlink" title="1.在VSCode中安装插件"></a>1.在VSCode中安装插件</h5><p>​        “LaTeX WorkShop” 和 “LaTeX Lauguage Support”</p><h5 id="2-修改-settings-json"><a href="#2-修改-settings-json" class="headerlink" title="2. 修改 settings.json"></a>2. 修改 <code>settings.json</code></h5><p>​        添加以下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;latex-workshop.latex.autoBuild.run&quot;</span>: <span class="hljs-string">&quot;onSave&quot;</span>,<br>  <span class="hljs-string">&quot;latex-workshop.showContextMenu&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;latex-workshop.intellisense.package.enabled&quot;</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-string">&quot;latex-workshop.message.error.show&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;latex-workshop.message.warning.show&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;latex-workshop.latex.tools&quot;</span>: [<br>   &#123;<br>         <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;pdflatex&quot;</span>,<span class="hljs-attr">&quot;command&quot;</span>: <span class="hljs-string">&quot;pdflatex&quot;</span>,<br>         <span class="hljs-attr">&quot;args&quot;</span>: [<span class="hljs-string">&quot;-synctex=1&quot;</span>,<span class="hljs-string">&quot;-interaction=nonstopmode&quot;</span>,<br>              <span class="hljs-string">&quot;-file-line-error&quot;</span>, <span class="hljs-string">&quot;%DOCFILE%&quot;</span>]<br>   &#125;,  <br>   &#123;<br>          <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;xelatex&quot;</span>,<span class="hljs-attr">&quot;command&quot;</span>: <span class="hljs-string">&quot;xelatex&quot;</span>,<br>          <span class="hljs-attr">&quot;args&quot;</span>: [<span class="hljs-string">&quot;-synctex=1&quot;</span>,<span class="hljs-string">&quot;-interaction=nonstopmode&quot;</span>,<br>               <span class="hljs-string">&quot;-file-line-error&quot;</span>,<span class="hljs-string">&quot;%DOCFILE%&quot;</span>]<br>   &#125;,<br>   &#123;<br>          <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;latexmk&quot;</span>,<span class="hljs-attr">&quot;command&quot;</span>: <span class="hljs-string">&quot;latexmk&quot;</span>,<br>          <span class="hljs-attr">&quot;args&quot;</span>: [<span class="hljs-string">&quot;-synctex=1&quot;</span>,<span class="hljs-string">&quot;-interaction=nonstopmode&quot;</span>,<br>              <span class="hljs-string">&quot;-file-line-error&quot;</span>,<span class="hljs-string">&quot;-pdf&quot;</span>,<span class="hljs-string">&quot;-outdir=%OUTDIR%&quot;</span>,<span class="hljs-string">&quot;%DOCFILE%&quot;</span>]<br>   &#125;,<br>   &#123;<br>          <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;bibtex&quot;</span>,<span class="hljs-attr">&quot;command&quot;</span>: <span class="hljs-string">&quot;bibtex&quot;</span>,<span class="hljs-attr">&quot;args&quot;</span>: [<span class="hljs-string">&quot;%DOCFILE%&quot;</span>]<br>   &#125;<br>  ],<br>  <span class="hljs-string">&quot;latex-workshop.latex.recipes&quot;</span>: [<br>      &#123;<br>          <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;XeLaTeX&quot;</span>,<span class="hljs-attr">&quot;tools&quot;</span>: [<span class="hljs-string">&quot;xelatex&quot;</span>]<br>      &#125;,<br>      &#123;<br>          <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;PDFLaTeX&quot;</span>,<span class="hljs-attr">&quot;tools&quot;</span>: [<span class="hljs-string">&quot;pdflatex&quot;</span>]<br>      &#125;,<br>      &#123;<br>          <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;BibTeX&quot;</span>,<span class="hljs-attr">&quot;tools&quot;</span>: [<span class="hljs-string">&quot;bibtex&quot;</span>]<br>      &#125;,<br>      &#123;<br>          <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;LaTeXmk&quot;</span>,<span class="hljs-attr">&quot;tools&quot;</span>: [<span class="hljs-string">&quot;latexmk&quot;</span>]<br>      &#125;,<br>      &#123;<br>          <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;xelatex -&gt; bibtex -&gt; xelatex*2&quot;</span>,<br>          <span class="hljs-attr">&quot;tools&quot;</span>: [<span class="hljs-string">&quot;xelatex&quot;</span>,<span class="hljs-string">&quot;bibtex&quot;</span>,<span class="hljs-string">&quot;xelatex&quot;</span>,<span class="hljs-string">&quot;xelatex&quot;</span>]<br>      &#125;,<br>      &#123;<br>          <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;pdflatex -&gt; bibtex -&gt; pdflatex*2&quot;</span>,<br>          <span class="hljs-attr">&quot;tools&quot;</span>: [<span class="hljs-string">&quot;pdflatex&quot;</span>,<span class="hljs-string">&quot;bibtex&quot;</span>,<span class="hljs-string">&quot;pdflatex&quot;</span>,<span class="hljs-string">&quot;pdflatex&quot;</span>]<br>      &#125;,<br>  ],<br>  <span class="hljs-string">&quot;latex-workshop.latex.clean.fileTypes&quot;</span>: [<br>      <span class="hljs-string">&quot;*.aux&quot;</span>,<span class="hljs-string">&quot;*.bbl&quot;</span>,<span class="hljs-string">&quot;*.blg&quot;</span>,<span class="hljs-string">&quot;*.idx&quot;</span>,<span class="hljs-string">&quot;*.ind&quot;</span>,<span class="hljs-string">&quot;*.lof&quot;</span>,<br>      <span class="hljs-string">&quot;*.lot&quot;</span>,<span class="hljs-string">&quot;*.out&quot;</span>,<span class="hljs-string">&quot;*.toc&quot;</span>,<span class="hljs-string">&quot;*.acn&quot;</span>,<span class="hljs-string">&quot;*.acr&quot;</span>,<span class="hljs-string">&quot;*.alg&quot;</span>,<br>      <span class="hljs-string">&quot;*.glg&quot;</span>,<span class="hljs-string">&quot;*.glo&quot;</span>,<span class="hljs-string">&quot;*.gls&quot;</span>,<span class="hljs-string">&quot;*.ist&quot;</span>,<span class="hljs-string">&quot;*.fls&quot;</span>,<span class="hljs-string">&quot;*.log&quot;</span>,<br>      <span class="hljs-string">&quot;*.fdb_latexmk&quot;</span><br>  ],<br>  <span class="hljs-string">&quot;latex-workshop.latex.autoClean.run&quot;</span>: <span class="hljs-string">&quot;onFailed&quot;</span>,<br>  <span class="hljs-string">&quot;latex-workshop.latex.recipe.default&quot;</span>: <span class="hljs-string">&quot;lastUsed&quot;</span>,<br>  <span class="hljs-string">&quot;latex-workshop.view.pdf.internal.synctex.keybinding&quot;</span>: <span class="hljs-string">&quot;double-click&quot;</span><br><br></code></pre></td></tr></table></figure><blockquote><p>备注：VSCode中全局<code>settings.json</code>的文件路径为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">~/Library/Application Support/Code/User/settings.json<br></code></pre></td></tr></table></figure></blockquote><p>然后再VSCode左侧边栏 “Tex” 中的<code>Build LaTeX Project</code>选项中，选择 <code>XeLaTeX</code></p><img src="/2021/09/14/%E7%94%A8VSCode%E5%86%99LaTeX-1/screenshot1.png" class=""><p>这样即可实现 保存时自动编译的功能。（<code>CMD+S</code>保存）</p><h5 id="3-如何支持中文"><a href="#3-如何支持中文" class="headerlink" title="3. 如何支持中文"></a>3. 如何支持中文</h5><p>确保源码编码为’UTF-8’，在文档开头添加一句代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex">\usepackage&#123;ctex&#125;<br></code></pre></td></tr></table></figure><p>顺带一提，一般开头一定要加amspath，否则会导致数学公式换行失效、错位等问题（摸索了好几个小时，就为了这一句）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex">\usepackage&#123;amsmath&#125;<br></code></pre></td></tr></table></figure><h3 id="三-JetBrains-IDE-配置方法"><a href="#三-JetBrains-IDE-配置方法" class="headerlink" title="三. JetBrains IDE 配置方法"></a>三. JetBrains IDE 配置方法</h3><p>​        （以Intellij IDEA为例，PyCharm、CLion等其它JetBrains IDE配置方法相同）</p><h5 id="1-安装plugin"><a href="#1-安装plugin" class="headerlink" title="1 安装plugin"></a>1 安装plugin</h5><p>​    在 Preference -&gt; Plugins 中下载安装 <code>TeXiFy IDEA</code>和<code>PDF Viewer</code>插件。    </p><img src="/2021/09/14/%E7%94%A8VSCode%E5%86%99LaTeX-1/image-20210915230311465.png" class=""><p>​    如果出现死活搜索不出东西，提示网络问题的话，可以试试 设置 -&gt; Auto-detect proxy settings -&gt; 填入 <code>plugins.jetbrains.com</code></p><img src="/2021/09/14/%E7%94%A8VSCode%E5%86%99LaTeX-1/11.jpg" class=""><h5 id="2-Edit-Configurations"><a href="#2-Edit-Configurations" class="headerlink" title="2 Edit Configurations"></a>2 Edit Configurations</h5><p>​    创建一个tex后缀的文件，点击右上角的 <code>Add Configuration</code></p><img src="/2021/09/14/%E7%94%A8VSCode%E5%86%99LaTeX-1/image-20210915231225002.png" class=""><p>​    左上角添加 -&gt; 选择LaTeX</p><img src="/2021/09/14/%E7%94%A8VSCode%E5%86%99LaTeX-1/image-20210915231334132.png" class=""><p>​    Name随便填（建议填tex文件名）； </p><p>​    Compiler 选 <code>XeLaTeX</code>；</p><p>​    PDF Viewer 选 <code>Built-in PDF Viewer</code>；</p><p>​    Main File to compile 选择你写的tex文件</p><img src="/2021/09/14/%E7%94%A8VSCode%E5%86%99LaTeX-1/2314213.jpg" class=""><h5 id="3-编译LaTeX"><a href="#3-编译LaTeX" class="headerlink" title="3  编译LaTeX"></a>3  编译LaTeX</h5><p>​    点击右上角的运行按钮，或使用快捷键<code>Control + R</code>即可编译LaTeX生成PDF文件。此时插件应该会自动分屏（左侧为LaTeX源码，右侧为PDF阅读器）。如果没有自动分屏，就手动把<code>out</code>文件夹里的pdf文件拖出来分屏。</p><p>​    每次使用快捷键<code>Control + R</code>时都会自动编译并更新PDF，实现实时预览。</p><img src="/2021/09/14/%E7%94%A8VSCode%E5%86%99LaTeX-1/image-20210915232257650.png" class=""><p>​    </p>]]></content>
    
    
    <categories>
      
      <category>LaTeX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>macOS</tag>
      
      <tag>VSCode</tag>
      
      <tag>LaTeX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在树莓派上配置HomeBridge</title>
    <link href="/2021/09/13/03.%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E7%9A%84HomeBridge/"/>
    <url>/2021/09/13/03.%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E7%9A%84HomeBridge/</url>
    
    <content type="html"><![CDATA[<h1 id="Raspi-Homebridge-configuration"><a href="#Raspi-Homebridge-configuration" class="headerlink" title="Raspi Homebridge configuration"></a>Raspi Homebridge configuration</h1><h3 id="安装Homebridge"><a href="#安装Homebridge" class="headerlink" title="安装Homebridge"></a>安装Homebridge</h3><h4 id="方法一：直接安装Homebridge镜像"><a href="#方法一：直接安装Homebridge镜像" class="headerlink" title="方法一：直接安装Homebridge镜像"></a>方法一：直接安装Homebridge镜像</h4><p>github地址：<code>https://github.com/homebridge/homebridge-raspbian-image/releases</code></p><p><em><span id="more"></span></em></p><h4 id="方法二：手动安装"><a href="#方法二：手动安装" class="headerlink" title="方法二：手动安装"></a>方法二：手动安装</h4><p>Terminal中，依次执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl -sL https://deb.nodesource.com/setup_12.x | sudo bash - <br><span class="hljs-meta">#</span><span class="bash"> setup repo</span><br><br>sudo apt-get install -y nodejs gcc g++ make python<br><span class="hljs-meta">#</span><span class="bash"> 可以在此之前执行 `sudo apt-get upgrade`</span><br><span class="hljs-meta">#</span><span class="bash"> `-y` 意思是可以省略确认提示</span><br><br>node -v<br><span class="hljs-meta">#</span><span class="bash"> 查看已安装node的版本</span><br><br>sudo npm i -g npm<br><span class="hljs-meta">#</span><span class="bash"> upgrade npm (version 6.13.4 has issues with git dependencies)</span><br><br>sudo npm install -g --unsafe-perm homebridge homebridge-config-ui-x<br><span class="hljs-meta">#</span><span class="bash"> 如果npm下载太慢或失败，可以在install命令后添加 --registry https://registry.npm.taobao.org 使用淘宝 npm 镜像</span><br><br>sudo hb-service install --user homebridge<br><span class="hljs-meta">#</span><span class="bash"> hb-service可以将homebridge设置为服务，并支持开机自启。这会创建一个名为homebridge的用户来运行homebridge，</span><br><span class="hljs-meta">#</span><span class="bash"> 同时生成配置文件保存在 /var/lib/homebridge/config.json</span><br><span class="hljs-meta">#</span><span class="bash"> 记住最后显示的ip地址；默认用户名admin，密码admin</span><br><br></code></pre></td></tr></table></figure><h3 id="通过Homekit控制USB口的供电"><a href="#通过Homekit控制USB口的供电" class="headerlink" title="通过Homekit控制USB口的供电"></a>通过Homekit控制USB口的供电</h3><p>Terminal中，安装uhubctl</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install libusb-1.0-0-dev<br>git clone https://github.com/mvp/uhubctl<br>cd uhubctl<br>make<br>sudo make install<br></code></pre></td></tr></table></figure><p>控制供电的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo uhubctl -l 1-1 -p 2 -a on  # turn power on<br>sudo uhubctl -l 1-1 -p 2 -a off # turn power off<br></code></pre></td></tr></table></figure><p>接下来需要配置 udev USB 权限解决权限问题（否则必须使用 <code>sudo</code> 来以 root 权限运行 uhubctl，而默认情况下 Home­bridge 不会以 root 运行）。</p><ol><li><p>运行 <code>sudo uhubctl</code>，查看要控制的端口的 VID（或直接在 <a href="https://github.com/mvp/uhubctl#compatible-usb-hubs">uhubctl 文档</a>中查看）。</p></li><li><p>将下列 udev 规则添加至 <code>/etc/udev/rules.d/52-usb.rules</code> 文件，注意替换规则中的 VID：</p><ul><li><p>在树莓派 3B+ 上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs none">SUBSYSTEM==&quot;usb&quot;, ATTR&#123;idVendor&#125;==&quot;0424&quot;, MODE=&quot;0666&quot;<br></code></pre></td></tr></table></figure></li><li><p>在树莓派 4 上（USB2 和 USB3 各一条）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs none">SUBSYSTEM==&quot;usb&quot;, ATTR&#123;idVendor&#125;==&quot;2109&quot;, MODE=&quot;0666&quot;<br>SUBSYSTEM==&quot;usb&quot;, ATTR&#123;idVendor&#125;==&quot;1d6b&quot;, MODE=&quot;0666&quot;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>要使 udev 规则生效，执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo udevadm trigger --attr-match=subsystem=usb<br></code></pre></td></tr></table></figure></li><li><p>不使用 <code>sudo</code>，执行以下命令，确认能够正常控制 USB 供电的开关：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">uhubctl -l 1-1 -p 2 -a on  <span class="hljs-comment"># turn power on</span><br>uhubctl -l 1-1 -p 2 -a off <span class="hljs-comment"># turn power off</span><br></code></pre></td></tr></table></figure></li></ol><p>在homebridge中安装Script2插件</p><p>进入config，添加以下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;accessories&quot;</span>: [<br>    &#123;<br>        <span class="hljs-attr">&quot;accessory&quot;</span>: <span class="hljs-string">&quot;Script2&quot;</span>,<br>        <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;LED Light&quot;</span>,<br>        <span class="hljs-attr">&quot;on&quot;</span>: <span class="hljs-string">&quot;uhubctl -l 1-1 -p 2 -a on&quot;</span>,<br>        <span class="hljs-attr">&quot;off&quot;</span>: <span class="hljs-string">&quot;uhubctl -l 1-1 -p 2 -a off&quot;</span>,<br>        <span class="hljs-attr">&quot;state&quot;</span>: <span class="hljs-string">&quot;uhubctl -l 1-1 -p 2 2&gt;/dev/null | grep -c &#x27;power&#x27;&quot;</span>,<br>        <span class="hljs-attr">&quot;on_value&quot;</span>: <span class="hljs-string">&quot;1&quot;</span><br>    &#125;<br>]<br></code></pre></td></tr></table></figure><h3 id="米家设备token获取"><a href="#米家设备token获取" class="headerlink" title="米家设备token获取"></a>米家设备token获取</h3><p><code>https://www.home-assistant.io/integrations/xiaomi_miio#xiaomi-cloud-tokens-extractor-1</code></p><p>github地址： <code>https://github.com/PiotrMachowski/Xiaomi-cloud-tokens-extractor/blob/master</code></p><h3 id="HomeKit摄像头（暂未成功"><a href="#HomeKit摄像头（暂未成功" class="headerlink" title="HomeKit摄像头（暂未成功)"></a>HomeKit摄像头（暂未成功)</h3><p>bilibili地址：</p><p><code>https://b23.tv/vu977y</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">把吃灰的树莓派利用起来，DIY一个支持原生HomeKit的摄像头。还可以自定义分辨率，码率，帧率。如果家里有家庭中枢，还可以进行外网访问。<br>https:<span class="hljs-regexp">//</span>bit.ly/<span class="hljs-number">2</span>VTjtZJ<br>http:<span class="hljs-regexp">//</span>homebridge.local<br>https:<span class="hljs-regexp">//</span>bit.ly/<span class="hljs-number">2</span>VT0cIn<br>https:<span class="hljs-regexp">//</span>bit.ly/<span class="hljs-number">3</span>jTC8wR<br></code></pre></td></tr></table></figure><p>用到的github项目地址：</p><p><code>https://github.com/Sunoo/homebridge-camera-ffmpeg</code></p><p><code>https://sunoo.github.io/homebridge-camera-ffmpeg/configs/Raspberry-Pi-with-Camera-Module.html</code></p><p>1 安装HomeBridge 镜像</p><p>给树莓派开机（不需要接鼠标、键盘、HDMI口），等待一会儿，在手机上连接名为 <code>HomeBridge WIFI Setup</code> 的WiFi，输入wifi密码（如果树莓派搜索不到家里的wifi，等一会儿重试即可）</p><p>ssh：用户名<code>pi@192.168.31.214</code>，密码<code>raspberry</code></p><p>2 安装HomeBridge插件 <code>Camera FFMpeg</code></p><p>3 创建service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install v4l2loopback-dkms<br><br>Edit /boot/config.txt and change gpu_mem=128 to gpu_mem=256 (or use raspi-config)<br></code></pre></td></tr></table></figure><p>Create file <code>/etc/systemd/system/camera-loopback.service</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">[Unit]<br>Description=Set up loopback cameras<br><br>[Service]<br>ExecStartPre=/sbin/modprobe v4l2loopback devices=2<br>ExecStart=/usr/local/bin/ffmpeg -f video4linux2 -input_format yuv420p -video_size 1280x720 -i /dev/video0 -codec copy -f v4l2 /dev/video1<br>Restart=always<br>RestartSec=2<br><br>[Install]<br>WantedBy=default.target<br></code></pre></td></tr></table></figure><p>Activate with <code>sudo systemctl enable camera-loopback</code> </p><p>and start with <code>sudo systemctl start camera-loopback</code></p><p>4 编辑HomeBridge的<code>config.json</code></p><p>在platforms后面添加：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Camera FFmpeg&quot;</span>,<br>    <span class="hljs-attr">&quot;cameras&quot;</span>: [<br>        &#123;<br>            <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;Raspberry Pi Camera&quot;</span>,<br>            <span class="hljs-attr">&quot;manufacturer&quot;</span>: <span class="hljs-string">&quot;Edddd&quot;</span>,<br>            <span class="hljs-attr">&quot;model&quot;</span>: <span class="hljs-string">&quot;RPI HomeKit Camera&quot;</span>,<br>            <span class="hljs-attr">&quot;serialNumber&quot;</span>: <span class="hljs-string">&quot;12345678&quot;</span>,<br>            <span class="hljs-attr">&quot;unbridge&quot;</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">&quot;videoConfig&quot;</span>: &#123;<br>                <span class="hljs-attr">&quot;source&quot;</span>: <span class="hljs-string">&quot;-f video4linux2 -i /dev/video1&quot;</span>,<br>                <span class="hljs-attr">&quot;maxStreams&quot;</span>: <span class="hljs-number">1</span>,<br>                <span class="hljs-attr">&quot;maxWidth&quot;</span>: <span class="hljs-number">1280</span>,<br>                <span class="hljs-attr">&quot;maxHeight&quot;</span>: <span class="hljs-number">720</span>,<br>                <span class="hljs-attr">&quot;maxFPS&quot;</span>: <span class="hljs-number">30</span>,<br>                <span class="hljs-attr">&quot;maxBitrate&quot;</span>: <span class="hljs-number">1000</span>,<br>                <span class="hljs-attr">&quot;forceMax&quot;</span>: <span class="hljs-literal">true</span>,<br>                <span class="hljs-attr">&quot;vcodec&quot;</span>: <span class="hljs-string">&quot;h264_omx&quot;</span><br>            &#125;<br>        &#125;<br>    ],<br>    <span class="hljs-attr">&quot;platform&quot;</span>: <span class="hljs-string">&quot;Camera-ffmpeg&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>树莓派</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>RaspberryPi</tag>
      
      <tag>HomeBridge</tag>
      
      <tag>HomeKit</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派配置记录</title>
    <link href="/2021/09/12/02.%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/09/12/02.%E9%85%8D%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="My-raspberrypi-configurations"><a href="#My-raspberrypi-configurations" class="headerlink" title="My raspberrypi configurations"></a>My raspberrypi configurations</h1><h3 id="启动VNC和SSH"><a href="#启动VNC和SSH" class="headerlink" title="启动VNC和SSH"></a>启动VNC和SSH</h3><p><code>sudo raspi-config</code>，在界面中开启vnc和ssh即可</p><p><em><span id="more"></span></em></p><p>电脑ssh树莓派时，如果出现类似以下的错误：</p><blockquote><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gauss">$ ssh <span class="hljs-built_in">pi</span><span class="hljs-comment">@192.168.31.214</span><br><span class="hljs-comment">@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><br><span class="hljs-comment">@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span><br><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@@</span><span class="hljs-comment">@</span><br><span class="hljs-comment">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span><br><span class="hljs-comment">Someone could be eavesdropping on you right now (man-in-the-middle attack)!</span><br><span class="hljs-comment">It is also possible that a host key has just been changed.</span><br><span class="hljs-comment">........</span><br></code></pre></td></tr></table></figure></blockquote><p>解决方法是输入以下命令（将<code>your_ip_address_to_visit</code>换成树莓派的ip地址），然后重新连接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -R [your_ip_address_to_visit]<br></code></pre></td></tr></table></figure><h3 id="apt-get切换国内源，解决下载太慢问题"><a href="#apt-get切换国内源，解决下载太慢问题" class="headerlink" title="apt-get切换国内源，解决下载太慢问题"></a>apt-get切换国内源，解决下载太慢问题</h3><p>首先查看linux（树莓派os为debian）版本：<code>lsb_release -a</code>，版本可能是buster</p><p>然后看一下清华源地址： <a href="https://mirrors.tuna.tsinghua.edu.cn/help/debian/">https://mirrors.tuna.tsinghua.edu.cn/help/debian/</a></p><p>内容（可以去访问查看，也可以直接复制下面的文字）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free<br><span class="hljs-meta">#</span><span class="bash"> deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free<br><span class="hljs-meta">#</span><span class="bash"> deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free<br><span class="hljs-meta">#</span><span class="bash"> deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free</span><br>deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free<br><span class="hljs-meta">#</span><span class="bash"> deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free</span><br></code></pre></td></tr></table></figure><p>把这段文字复制下来，然后更改<code>sources.list</code>文件。这个文件的位置在：<code>/etc/apt/sources.list</code>。可以用<code>sudo vim</code>或者 mousepad 去打开修改。</p><p>更改文件完成后，shell执行<code>sudo apt-get update &amp;&amp; sudo apt-get upgrade -y</code>，更新这个配置文件并更新所有的包，等待一会儿就完成了！这样apt-get的速度就会快很多。</p><h3 id="安装vim"><a href="#安装vim" class="headerlink" title="安装vim"></a>安装vim</h3><p>树莓派自带vi，命令为vi，但不知为何vi不能正确识别键盘的方向键和backspace键。安装vim可以解决</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get install vim <br></code></pre></td></tr></table></figure><h3 id="安装zsh和oh-my-zsh"><a href="#安装zsh和oh-my-zsh" class="headerlink" title="安装zsh和oh my zsh"></a>安装zsh和oh my zsh</h3><p>参考 <a href="mintimate.cn">mintimate</a> 的教程。</p><p>1 安装zsh并设置为默认终端</p><p>查看已有的shell： <code>cat /etc/shells</code></p><p>安装zsh：<code>sudo apt-get install zsh</code></p><p>查看zsh路径： <code>which zsh</code> ，路径应该是<code>/bin/zsh</code>或者<code>/usr/bin/zsh</code></p><p>设置为默认shell：<code>chsh -s /bin/zsh</code>，重启终端或者重启树莓派生效</p><p>2 安装oh my zsh</p><p>一键安装脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">zsh -c &quot;$(curl -fsSL &#x27;https://host.mintimate.cn/fileHost/download/MTM1NjkzNzI1OTIxMDg0NjIwOQ==&#x27;)&quot;<br></code></pre></td></tr></table></figure><p>切换主题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim ~/.zshrc<br><span class="hljs-meta">#</span><span class="bash"> mintimate<span class="hljs-string">&#x27;s theme: steeef</span></span><br>source ~/.zshrc<br></code></pre></td></tr></table></figure><h3 id="Mac上vim颜色高亮显示等设置"><a href="#Mac上vim颜色高亮显示等设置" class="headerlink" title="Mac上vim颜色高亮显示等设置"></a>Mac上vim颜色高亮显示等设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp -r /usr/share/vim/vimrc ~/.vimrc<br><br>vim ~/.zshrc<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 在里面添加————————————————————————————————————————————</span><br>syntax on &quot; 语法高亮<br><br>autocmd InsertLeave * se nocul<br>autocmd InsertEnter * se cul   &quot; 用浅色高亮当前行<br><br>set tabstop=4  &quot; Tab键的宽度<br><br>set softtabstop=4<br>set shiftwidth=4  &quot;  统一缩进为4<br><br>set number   &quot; 显示行号<br><br>colorscheme pablo   &quot; 设置颜色主题<br><br>set ruler   &quot; 在编辑过程中，在右下角显示光标位置的状态行<br><br>set scrolloff=3   &quot; 光标移动到buffer的顶部和底部时保持3行距离<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 重新加载————————————————————————————————————————————</span><br><br>source ~/.vimrc<br></code></pre></td></tr></table></figure><h3 id="查看cpu情况："><a href="#查看cpu情况：" class="headerlink" title="查看cpu情况："></a>查看cpu情况：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pip install s-tui<br><br>sudo s-tui<br></code></pre></td></tr></table></figure><h3 id="github太慢："><a href="#github太慢：" class="headerlink" title="github太慢："></a>github太慢：</h3><p>使用github的镜像网站进行访问，<a href="https://link.zhihu.com/?target=http://github.com.cnpmjs.org">github.com.cnpmjs.org</a>，我们将原本的网站中的github.com 进行替换。比如<code>git clone github.com/xxx/xxx.git</code>，将其替换为<code>git clone github.com.cnpmjs.org/xxx/xxx.git</code></p><h3 id="禁止息屏-："><a href="#禁止息屏-：" class="headerlink" title="禁止息屏(?)："></a>禁止息屏(?)：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/lightdm/lightdm.conf<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 找到[SeatDefaults]下：</span><br><span class="hljs-meta">#</span><span class="bash">server-command=X 将这一行修改为：</span><br>xserver-command=X -s 0 -dpms<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> -s 设置屏幕保护不启用</span><br><span class="hljs-meta">#</span><span class="bash"> dpms 关闭电源节能管理</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>树莓派</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>RaspberryPi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/09/07/01.hello-world/"/>
    <url>/2021/09/07/01.hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>Billhu0</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
